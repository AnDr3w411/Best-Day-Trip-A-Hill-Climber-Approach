{"name":"Best Day Trip: A Hill Climber Approach","tagline":"Hill climber algorithm to find the best possible day trip","body":"## Generate the best possible day trip!\r\n\r\nThis project is meant to generate an optimized day trip using the googleAPI to get places and a hill climbing algorithm to find the trip that takes you to the best places with the shortest travel time. This is a type of traveling salesman problem with a hill climber algorithm used to solve it. With the googleAPI I was able to get all of the places within a specified radius of the types that I am interested in, i.e. museums. I am able to query googleAPI to find the travel time between 2 places and each place has a rating attribute based on user reviews. With a rating and a time the algorithm just goes through a pregenerated trip making changes where ever it can to improve the \"happiness\" level of the trip.\r\n\r\nAn initial trip is randomly generated and the algorithm is applied to it in order to find the \"hill\" or best possible trip that can be obtained by improving upon the initial destinations. This process is then repeated and the best \"hill\" is kept and compared to new \"hills\" as the goal is to find the maximum and not just a local maximum. How I currently have it set up if a new best isn't found after 1000 attempts then the program terminates and assumes that it has found the absolute best trip it can.\r\n\r\nI decided to do this project because I never know what I want to do and I saw an article saying scientists found the perfect road trip so I wanted to make something that could potentially be useful to find something to do for the day.\r\n\r\n##Randomly Generated Initial Trip\r\nAverage Rating:  4.26   \r\nTotal Time:  1 hr 3 min and 16 seconds\r\n![original trip](http://oi68.tinypic.com/2qd2z4m.jpg)\r\n##Final Trip\r\nAverage Rating:  4.6   \r\nTotal Time:  54 minutes and 21 seconds\r\n![final trip](http://oi65.tinypic.com/2m6r3ev.jpg)\r\n\r\n\r\n\r\n####Notes\r\nYou will need a GoogleAPI key. Instructions on how to get one can be found here https://developers.google.com/maps/documentation/javascript/get-api-key \r\nSpecifically Google Maps Distance Matrix API, Google Maps Geocoding API, and Google Places API Web Service are what are used here.\r\nhttps://github.com/googlemaps/google-maps-services-python\r\nhttps://github.com/slimkrazy/python-google-places","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}